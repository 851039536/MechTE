<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MechTE</name>
    </assembly>
    <members>
        <member name="T:MechTE.Cmd.TCmd">
            <summary>
            cmd命令
            </summary>
        </member>
        <member name="M:MechTE.Cmd.TCmd.VExe(System.Object)">
            <summary>
            cmd命令vue版本
            </summary>
            <param name="name">Shell程序命令</param>
            <returns>string</returns>
        </member>
        <member name="M:MechTE.Cmd.TCmd.StartExe(System.String)">
             <summary>
            cmd命令
             </summary>
             <param name="cmd">Shell程序命令</param>
             <returns>string</returns>
        </member>
        <member name="M:MechTE.Cmd.TCmd.ExeCommand(System.String[])">
             <summary>
             执行多条cmd.exe命令
             </summary>
            命令文本数组
             命令输出文本
        </member>
        <member name="M:MechTE.Cmd.TCmd.StartApp(System.String)">
            <summary>
             启动Windows应用程序，隐藏程序界面
            </summary>
            <param name="appName">/应用程序路径名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE.Cmd.TCmd.StartApp(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            进程窗口模式
            </summary>
            <param name="appName">应用程序路径名称</param>
            <param name="style">显示模式</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE.Cmd.TCmd.StartApp(System.String,System.String)">
             
             启动外部应用程序，隐藏程序界面
             
            应用程序路径名称
            启动参数
             true表示成功，false表示失败
        </member>
        <member name="M:MechTE.Cmd.TCmd.StartApp(System.String,System.String,System.Diagnostics.ProcessWindowStyle)">
             
             启动外部应用程序
             
            应用程序路径名称
            启动参数
            进程窗口模式
             true表示成功，false表示失败
        </member>
        <member name="M:MechTE.Cmd.TCmd.LoginNetwork(System.String,System.String,System.String)">
            <summary>
            网盘登录
            </summary>
            <param name="path">网盘路径:\10.xx.xx</param>
            <param name="userName">用户</param>
            <param name="passWord">密码</param>
            <returns>bool</returns>
        </member>
        <member name="T:MechTE.Files.TFile">
            <summary>
            文件操作类
            </summary>
        </member>
        <member name="M:MechTE.Files.TFile.VOpenFile(System.Object)">
            <summary>
            打开指定路径/程序
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.ShellExecute(System.IntPtr,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Int32)">
            <summary>
            使用DllImport指定调用的Windows API函数及其相关信息
            </summary>
            <param name="hwnd">指定父窗口句柄:ntPtr.Zero</param>
            <param name="lpszOp">指定要进行的操作:Open</param>
            <param name="lpszFile">指定要打开的文件名|路径</param>
            <param name="lpszParams">指定命令行参数: 0 | ""</param>
            <param name="lpszDir">用于指定默认目录:0 | ""</param>
            <param name="fsShowCmd">显示模式: 0:隐藏 1~11</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.OpenFile(System.String,System.Int32)">
            <summary>
            打开程序/文件夹
            </summary>
            <param name="path">路径</param>
            <param name="fsShow">显示模式 默认1</param>
        </member>
        <member name="M:MechTE.Files.TFile.OpenFile(System.String)">
            <summary>
            使用本地系统进程打开程序/文件夹
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.CopyFile(System.String,System.String)">
            <summary>
            复制文件夹及文件
            </summary>
            <param name="sourceFolder">原文件路径</param>
            <param name="destFolder">目标文件路径</param>
            <returns>1 || -1</returns>
        </member>
        <member name="M:MechTE.Files.TFile.FileDialog">
            <summary>
            窗体浏览文件对话框
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:MechTE.Files.TFile.QueryFile(System.String)">
            <summary>
            获取指定目录文件夹
            </summary>
            <param name="path">文件路径</param>
            <returns>文件名,文件路径</returns>
        </member>
        <member name="M:MechTE.Files.TFile.DelFile(System.String)">
            <summary>
            删除指定的文件
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE.Files.TFile.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:MechTE.Files.TFile.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE.Files.TFile.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="filePath">路径,包括文件名</param>
        </member>
        <member name="M:MechTE.Files.TFile.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.CreateFile(System.String)">
            <summary>
            创建一个文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:MechTE.Files.TFile.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE.Files.TFile.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:MechTE.Files.TFile.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:MechTE.Files.TFile.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE.Files.TFile.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="strings">文件内容</param>
        </member>
        <member name="M:MechTE.Files.TFile.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:MechTE.Files.TFile.FileCopy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="orignFile">原始文件</param>
            <param name="newFile">新文件路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="orignFile">原始路径</param>
            <param name="newFile">新路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="orignFolder">当前目录</param>
            <param name="newFloder">新目录</param>
        </member>
        <member name="M:MechTE.Files.TFile.FolderCreate(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE.Files.TFile.FileCreate(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE.Files.TFile.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:MechTE.Files.TFile.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="path">详细路径</param>
        </member>
        <member name="M:MechTE.Files.TFile.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.GetFileAttribute(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Files.TFile.GetFiles(System.IO.DirectoryInfo,System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            获取指定目录下所有符合指定模式的文件名。
            </summary>
            <param name="directory">指定目录。</param>
            <param name="pattern">指定模式。</param>
            <param name="fileList">符合指定模式的文件名列表。</param>
        </member>
        <member name="M:MechTE.Files.TFile.GetFiles(System.IO.DirectoryInfo,System.String,System.Collections.Generic.List{System.String}@,System.Boolean)">
            <summary>
            获取指定目录下符合指定模式的文件名和文件夹名。
            </summary>
            <param name="directory">指定目录。</param>
            <param name="pattern">指定模式。</param>
            <param name="fileList">符合指定模式的文件和文件夹名称列表。</param>
            <param name="recursive">是否递归获取子文件夹中的文件和文件夹，true表示递归获取。</param>
        </member>
        <member name="M:MechTE.Files.TFile.GetDesktop(System.Object)">
            <summary>
            读取桌面内容
            </summary>
        </member>
        <member name="T:MechTE.Ini.TIni">
            <summary>
            ini文件操作类
            </summary>
        </member>
        <member name="M:MechTE.Ini.TIni.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取ini
            </summary>
            <param name="section">ni文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="def">如果ini文件中没有前两个参数指定的字段名或键名,则将此值赋给变量</param>
            <param name="retVal">得到的值</param>
            <param name="size">大小</param>
            <param name="iniPath">完整的ini文件名路径</param>
            <returns></returns>
            声明INI文件的读操作函数 GetPrivateProfileString()
        </member>
        <member name="M:MechTE.Ini.TIni.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="val">写入的值</param>
            <param name="filePath">完整的ini文件名路径</param>
            <returns></returns>
            声明INI文件的写操作函数 WritePrivateProfileString()
        </member>
        <member name="M:MechTE.Ini.TIni.SetIni(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="value">写入的值</param>
            <param name="path">完整的ini文件名路径</param>
        </member>
        <member name="M:MechTE.Ini.TIni.GetIni(System.String,System.String,System.String)">
            <summary>
            读取ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">键名</param>
            <param name="path">文件路径</param>
            <returns>string</returns>
        </member>
        <member name="M:MechTE.Ini.TIni.GetIniArray(System.String,System.String,System.String)">
            <summary>
            读取ini string[]
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">文件路径</param>
            <param name="path">Key</param>
            <returns>string[]</returns>
        </member>
        <member name="M:MechTE.Ini.TIni.DeleteIni(System.String)">
            <summary>
            删除一个INI文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:MechTE.Ini.TIni.GetIniAll(System.String)">
            <summary>
            查询INI文件所有内容
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE.Ini.TIni.GetIniValue(System.String,System.String,System.String)">
            <summary>
            读取INI指定值 (@".\CONFIG.ini","CONFIG","Delay");
            </summary>
            <param name="path">文件路径</param>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">Key</param>
            <returns>string[]</returns>
        </member>
        <member name="M:MechTE.Ini.TIni.UpIniValue(System.String,System.String,System.String,System.String)">
            <summary>
            更改指定INI值
            </summary>
            <param name="path">文件路径</param>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">Key</param>
            <param name="name">name</param>
            <returns></returns>
        </member>
        <member name="M:MechTE.Ini.TIni.AddIniValue(System.String,System.String,System.String,System.String)">
            <summary>
            添加section下的键值,如果已存在section则在已存在的section下添加键值
            </summary>
            <param name="path">ini路径</param>
            <param name="section">section</param>
            <param name="key">键</param>
            <param name="name">值</param>
        </member>
        <member name="M:MechTE.Ini.TIni.DelIniValue(System.String,System.String,System.String)">
            <summary>
            删除一个键
            </summary>
            <param name="path">ini路径</param>
            <param name="section">section</param>
            <param name="key">键</param>
        </member>
        <member name="M:MechTE.Ini.TIni.DelIniSection(System.String,System.String)">
            <summary>
            从文件中删除“section”部分以及与之关联的所有键和注释
            </summary>
            <param name="path">ini路径</param>
            <param name="section">section</param>
        </member>
        <member name="T:MechTE.Json.TJson">
            <summary>
            Newtonsoft.Json
            </summary>
        </member>
        <member name="M:MechTE.Json.TJson.WriteJsonStr(System.String,System.String)">
            <summary>
            将序列化的json字符串内容写入Json文件，并且保存
            </summary>
            <param name="path">将序列化的json字符串内容写入Json文件，并且保存</param>
            <param name="jsonConents">写入的数据</param>
        </member>
        <member name="M:MechTE.Json.TJson.GetJsonStr(System.String)">
            <summary>
            获取到本地的Json文件并且解析返回对应的json字符串
            </summary>
            <param name="filepath">路径:如@".\json\JProgramFile.json"</param>
            <returns>string</returns>
        </member>
        <member name="M:MechTE.Json.TJson.GetJson(System.String)">
            <summary>
            读取数组Json数据
            </summary>
            <param name="path">路径</param>
            <returns>JArray</returns>
        </member>
        <member name="M:MechTE.Json.TJson.WriteJson(System.String,Newtonsoft.Json.Linq.JArray)">
            <summary>
            写入数组Json数据
            </summary>
            <param name="path">路径</param>
            <param name="j">JArray</param>
        </member>
        <member name="T:MechTE.Form.TForm">
            <summary>
            窗体api
            </summary>
        </member>
        <member name="M:MechTE.Form.TForm.MesBox(System.String,System.String)">
            <summary>
            弹框提示
            </summary>
            <param name="name">描述</param>
            <param name="title">标题</param>
            <returns>bool</returns>
        </member>
        <member name="T:MechTE.Systems.TSystems">
            <summary>
            系统类
            </summary>
        </member>
        <member name="M:MechTE.Systems.TSystems.GetWindows">
            <summary>
            读取当前系统信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE.Systems.TSystems.GetCurrentProcess">
            <summary>
            获取当前进程信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE.Systems.TSystems.CheckProcessesByName(System.String)">
            <summary>
            检查重复启动
            </summary>
            <param name="name">进程名称</param>
        </member>
        <member name="M:MechTE.Systems.TSystems.GetProcesses">
            <summary>
            获得本机的进程
            </summary>
            <returns>Process[]</returns>
        </member>
        <member name="M:MechTE.Systems.TSystems.GetLogicalDrives">
            <summary>
            获取系统驱动器
            </summary>
            <returns></returns>
        </member>
        <member name="T:MechTE.XML.XmlProcess">
            <summary>
            
            </summary>
        </member>
        <member name="M:MechTE.XML.XmlProcess.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MechTE.XML.XmlProcess.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="strPath"></param>
        </member>
        <member name="P:MechTE.XML.XmlProcess.XmlPath">
            <summary>
            xml路径
            </summary>
        </member>
        <member name="M:MechTE.XML.XmlProcess.XMLLoad">
            <summary>
            导入XML文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE.XML.XmlProcess.XMLLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="strPath">XML文件路径</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.Read(System.String)">
            <summary>
            读取指定节点的数据
            </summary>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read("/Node", "")
            XMLProsess.Read("/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:MechTE.XML.XmlProcess.Read(System.String,System.String)">
            <summary>
            读取指定路径和节点的串联值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:MechTE.XML.XmlProcess.Read(System.String,System.String,System.String)">
            <summary>
            读取指定路径和节点的属性值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")
        </member>
        <member name="M:MechTE.XML.XmlProcess.ReadAllChildallValue(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.GetDataViewByXml(System.String,System.String)">
            <summary> 
            读取XML返回经排序或筛选后的DataView
            </summary>
            <param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
            <param name="strSort"> 排序条件，如:"Id desc"</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "Element", "", "Value")
            XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
            XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")
        </member>
        <member name="M:MechTE.XML.XmlProcess.Insert(System.String,System.String,System.String,System.String[][])">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="strList">由XML属性名和值组成的二维数组</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            <summary>
            插入一行数据
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
            <param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
            <param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:MechTE.XML.XmlProcess.Update(System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="node">节点</param>
            <param name="value">值</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.Update(System.String,System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node","Value")
            XMLProsess.Insert(path, "/Node","Value")
        </member>
        <member name="M:MechTE.XML.XmlProcess.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改指定节点的属性值(静态)
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "", "Value")
            XMLProsess.Insert(path, "/Node", "Attribute", "Value")
        </member>
        <member name="M:MechTE.XML.XmlProcess.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            <summary>
            更改符合条件的一条记录
            </summary>
            <param name="strXmlPath">XML文件路径</param>
            <param name="Columns">列名数组</param>
            <param name="ColumnValue">列值数组</param>
            <param name="strWhereColumnName">条件列名</param>
            <param name="strWhereColumnValue">条件列值</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:MechTE.XML.XmlProcess.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:MechTE.XML.XmlProcess.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:MechTE.XML.XmlProcess.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="ColumnValue">指定值</param>
        </member>
        <member name="T:MechTE.ConvertHelper.TConvertHelpers">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="limitedLength">字符串的固定长度</param>
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.ImgToBase(System.String)">
            <summary>
            图片转base64
            </summary>
            <param name="imagePath"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE.ConvertHelper.TConvertHelpers.BaseToImg(System.String)">
            <summary>
            base64转图片
            </summary>
            <param name="base64String"></param>
        </member>
    </members>
</doc>
