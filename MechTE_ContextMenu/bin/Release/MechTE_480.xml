<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MechTE_480</name>
    </assembly>
    <members>
        <member name="T:MechTE_480.Form.ProgressBars">
            <summary>
            进度条
            </summary>
        </member>
        <member name="F:MechTE_480.Form.ProgressBars.Ide">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.#ctor(System.String,System.Int32)">
            <summary>
            进度条初始化
            </summary>
            <param name="name">名称</param>
            <param name="time">时间毫秒</param>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.ProgressBars_Load(System.Object,System.EventArgs)">
            <summary>
            程序加载
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.ExecuteTest(System.Action)">
            <summary>
            执行窗体操作
            </summary>
            <param name="action">方法</param>
        </member>
        <member name="F:MechTE_480.Form.ProgressBars.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MechTE_480.Form.ProgressBars.progressBarForm">
            
            progressBarForm
            
        </member>
        <member name="T:MechTE_480.MECH.MechCmd">
            <summary>
            cmd命令
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechCmd.StartShell(System.String)">
             <summary>
            执行Shell命令
             </summary>
             <param name="cmd">Shell程序命令</param>
        </member>
        <member name="M:MechTE_480.MECH.MechCmd.StartBat(System.String)">
            <summary>
            执行bat文件
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechCmd.StartApp(System.String)">
            <summary>
             启动Windows应用程序，隐藏程序界面
            </summary>
            <param name="appName">/应用程序路径名称</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechCmd.StartApp(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            进程窗口模式
            </summary>
            <param name="appName">应用程序路径名称</param>
            <param name="style">显示模式</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechCmd.StartApp(System.String,System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            启动外部应用程序
            </summary>
            <param name="appName"></param>
            <param name="arguments"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechCmd.LoginNetwork(System.String,System.String,System.String)">
            <summary>
            网盘登录
            </summary>
            <param name="path">网盘路径:\10.xx.xx</param>
            <param name="userName">用户</param>
            <param name="passWord">密码</param>
            <returns>bool</returns>
        </member>
        <member name="T:MechTE_480.MECH.CmdPack">
            <summary>
            cmd包装类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.CmdPack.ExeCommand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            执行多条cmd.exe命令
            </summary>
            <param name="commandTexts"></param>
        </member>
        <member name="M:MechTE_480.MECH.CmdPack.ExeBat(System.String)">
            <summary>
            执行Bat
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MechTE_480.MECH.CmdPack.ExeCommandAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            使用cmd执行Shell命名
            </summary>
            <param name="commandTexts"></param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechConvert">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="totalLength">字符串的固定长度</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.ImgToBase64(System.String)">
            <summary>
            图片转base64
            </summary>
            <param name="imagePath"></param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechForm">
            <summary>
            窗体api
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechForm.MesBox(System.String,System.String)">
            <summary>
            弹框提示
            </summary>
            <param name="name">描述</param>
            <param name="title">标题</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechForm.ShowErr(System.String,System.String)">
            <summary>
            错误提示,
            消息框包含一个符号，该符号包含一个红色背景圆圈，圆圈中为白色 X 符号
            </summary>
            <param name="title">标题</param>
            <param name="prompt">描述</param>
        </member>
        <member name="M:MechTE_480.MECH.MechForm.ShowInputDialog(System.String,System.String)">
            <summary>
            弹窗接收输入参数
            </summary>
            <param name="title">标题</param>
            <param name="prompt">描述</param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechIni">
            <summary>
            ini文件操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取ini
            </summary>
            <param name="section">ni文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="def">如果ini文件中没有前两个参数指定的字段名或键名,则将此值赋给变量</param>
            <param name="retVal">得到的值</param>
            <param name="size">大小</param>
            <param name="iniPath">完整的ini文件名路径</param>
            <returns></returns>
            声明INI文件的读操作函数 GetPrivateProfileString()
        </member>
        <member name="M:MechTE_480.MECH.MechIni.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="val">写入的值</param>
            <param name="filePath">完整的ini文件名路径</param>
            <returns></returns>
            声明INI文件的写操作函数 WritePrivateProfileString()
        </member>
        <member name="M:MechTE_480.MECH.MechIni.WriteIni(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="value">写入的值</param>
            <param name="path">完整的ini文件名路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.ReadIni(System.String,System.String,System.String)">
            <summary>
            读取ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">键名</param>
            <param name="path">文件路径</param>
            <returns>string</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.ReadIniArray(System.String,System.String,System.String)">
            <summary>
            读取ini string[]
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">文件路径</param>
            <param name="path">Key</param>
            <returns>string[]</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.DeleteIni(System.String)">
            <summary>
            删除一个INI文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:MechTE_480.MECH.MechString">
            <summary>
            字符串操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechString.HexStrings2AsciiHexStrings(System.String)">
            <summary>
            将16进制字符串转为ASCII16进制字符串
            </summary>
            <returns>示例：01 > 3031</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechString.ByteArr2HexStrings(System.Byte[],System.String)">
            <summary>
            示例：[ "AB", "CD", "EF" ] -> "AB{separator}CD{separator}EF"
            </summary>
            <param name="bytes"></param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechString.Reverse(System.String)">
            <summary>
            将字符按2个长度为一组进行反序
            </summary>
            <param name="str">11223344</param>
            <returns>44332211->11223344</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechString.ClearStringSpaces(System.String)">
            <summary>
            清除字符串中的空格
            </summary>
            <param name="str"></param>
            <returns>00 00 00 00 > 00000000</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechString.HexadecimalToASCII(System.String)">
            <summary>
            将16进制字符转为ASCII字符
            </summary>
            <param name="hex">16个数字（0-9和A-F）来表示</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechString.ASCIIConvertsDecimal16(System.String)">
            <summary>
            ASCII字符转为16进制字符
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechTemplate">
            <summary>
            模板操作
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechTemplate.IsBzpToUpper(System.String)">
            <summary>
            检查SN是否是标准品条码
            转换大写
            </summary>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechUtils">
            <summary>
            通用工具类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.IsUserAdministrator">
            <summary>
            判断当前程序是否是管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.RestartAsAdministrator">
            <summary>
            重新启动应用程序并请求管理员权限
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.GetTheCurrentProgramAndDirectory">
            <summary>
            获取当前程序根目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.GetSelectedPath">
            <summary>
            获取Windows当前选文件定路径
            </summary>
            <returns>完整路径</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.EnterHfp">
            <summary>
            开启音频内部装置窗体显示到桌面
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.QuitHfp(System.String)">
            <summary>
            检测进程关掉音频内部装置
            </summary>
            <param name="processName">rundll32</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.GenerateNumberStringSequence(System.Int32,System.Int32)">
            <summary>
            生成数字字符串序列
            </summary>
            <param name="startNumber">序列中第一个整数的值</param>
            <param name="sequenceLength">要生成的顺序总条数</param>
            <returns>生成-> 0 1 2 3...</returns>  
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.StringToByteArray(System.String)">
            <summary>
            将字符串转换为字节数组
            示例："ABCDEF" -> [ 0xAB, 0xCD, 0xEF ]
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.ByteArrayToHexStrings(System.Collections.Generic.List{System.Byte},System.String)">
            <summary>
            将字节数组转换为十六进制字符串
            示例：[ "AB", "CD", "EF" ] -> "AB{separator}CD{separator}EF"
            </summary>
            <param name="bytes"></param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.CharacterConversionHidFormat(System.String)">
            <summary>
            将字符转换HID指令格式 
            </summary>
            <param name="keyValue"></param>
            <returns>"keyValue=0021032334 > 00 21 03 23 34</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.IsEmptyAssert(System.String,System.String)">
            <summary>
             判断字符串是否为空,空等于true，抛出异常
            </summary>
            <param name="str"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.Assert(System.Boolean,System.String)">
            <summary>
            自定义断言方法， result == true 抛出异常
            </summary>
            <param name="result">bool</param>
            <param name="errMsg">错误信息</param>
            <remarks>系统断言不能在 Release 版保留，用这个方法替代</remarks>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.Assert(System.Func{System.Boolean},System.String)">
            <summary>
            自定义断言方法， func() == true 抛出异常    
            </summary>
            <param name="func"></param>
            <param name="errMsg"></param>
            <remarks>系统断言不能在 Release 版保留，用这个方法替代</remarks>
        </member>
        <member name="T:MechTE_480.MECH.MechXML">
            <summary>
            XML动态操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="strPath"></param>
        </member>
        <member name="F:MechTE_480.MECH.MechXML.PathXml">
            <summary>
            xml路径
            </summary>
        </member>
        <member name="F:MechTE_480.MECH.MechXML.funName">
            <summary>
            方法的节点名称
            </summary>
        </member>
        <member name="F:MechTE_480.MECH.MechXML.CurrenPath">
            <summary>
            根目录路径
            </summary>
        </member>
        <member name="P:MechTE_480.MECH.MechXML.XmlPath">
            <summary>
            xml路径
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.XmlLoad">
            <summary>
            导入XML文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.XmlLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="strPath">XML文件路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.ReadRequest(System.String,System.String,System.String)">
            <summary>
            读取Request中node节点的值
            </summary>
            <param name="path"></param>
            <param name="node"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertRequestFormat(System.String,System.String)">
            <summary>
            插入RequestFormat节点数据
            </summary>
            <param name="element">元素名</param>
            <param name="attribute">属性名,如果""则不插值</param>
            使用示列:
            ("packet_type","0x05");
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertRequestFormatResult(System.String)">
            <summary>
            插入RequestFormat数组节点,
            在需要传指令调用时使用,
            如:传bd:112233445566 根据传入的值进行赋值传入
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertResponseFormatResult(System.String)">
            <summary>
            插入RequestFormat数组节点
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertResponseFormat(System.String,System.String)">
            <summary>
            插入ResponseFormat节点数据 ,  响应匹配到的节点值
            </summary>
            <param name="element">元素名</param>
            <param name="attribute">属性名,如果""则不插值</param>
            使用示列:
            ("packet_type","0x05");
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InitializeTheNode">
            <summary>
            初始化节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.CreateChildNode">
            <summary>
            设定方法属性,创建节点对应的方法
            RequestFormat,
            ResponseFormat
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.UpdateRequest(System.String,System.String,System.String,System.String)">
            <summary>
            修改Request指定节点的属性值
            </summary>
            <param name="path"></param>
            <param name="node">节点,传入方法名</param>
            <param name="element">节点,传入属性名称</param>
            <param name="value">更新的值</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点,传入方法名</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:MechTE_480.MECH.MechXML.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="strXmlPath"></param>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="columnValue">指定值</param>
        </member>
        <member name="T:MechTE_480.MECH.MechFile">
            <summary>
            文件操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.ShellExecute(System.IntPtr,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Int32)">
            <summary>
            使用DllImport指定调用的Windows API函数及其相关信息
            </summary>
            <param name="hwnd">指定父窗口句柄:ntPtr.Zero</param>
            <param name="lpszOp">指定要进行的操作:Open</param>
            <param name="lpszFile">指定要打开的文件名|路径</param>
            <param name="lpszParams">指定命令行参数: 0 | ""</param>
            <param name="lpszDir">用于指定默认目录:0 | ""</param>
            <param name="fsShowCmd">显示模式: 0:隐藏 1~11</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.OpenFile(System.String,System.Int32)">
            <summary>
            打开程序/文件夹
            </summary>
            <param name="path">路径</param>
            <param name="fsShow">显示模式 默认1</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.OpenFile(System.String)">
            <summary>
            使用本地系统进程打开程序/文件夹
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.CopyFile(System.String,System.String)">
            <summary>
            复制文件夹及文件
            </summary>
            <param name="sourceFolder">原文件路径</param>
            <param name="destFolder">目标文件路径</param>
            <returns>1 || -1</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FileDialog">
            <summary>
            窗体浏览文件对话框
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.QueryFile(System.String)">
            <summary>
            获取指定目录文件夹
            </summary>
            <param name="path">文件路径</param>
            <returns>文件名,文件路径</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.DelFile(System.String)">
            <summary>
            删除指定的文件
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="filePath">路径,包括文件名</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.CreateFile(System.String)">
            <summary>
            创建一个文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.MECH.MechFile.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="strings">文件内容</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FileCopy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="orignFile">原始文件</param>
            <param name="newFile">新文件路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="orignFile">原始路径</param>
            <param name="newFile">新路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="orignFolder">当前目录</param>
            <param name="newFloder">新目录</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FolderCreate(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.FileCreate(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="path">详细路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFileAttribute(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFiles(System.IO.DirectoryInfo,System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            获取指定目录下所有符合指定模式的文件名。
            </summary>
            <param name="directory">指定目录。</param>
            <param name="pattern">指定模式。</param>
            <param name="fileList">符合指定模式的文件名列表。</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetFiles(System.IO.DirectoryInfo,System.String,System.Collections.Generic.List{System.String}@,System.Boolean)">
            <summary>
            获取指定目录下符合指定模式的文件名和文件夹名。
            </summary>
            <param name="directory">指定目录。</param>
            <param name="pattern">指定模式。</param>
            <param name="fileList">符合指定模式的文件和文件夹名称列表。</param>
            <param name="recursive">是否递归获取子文件夹中的文件和文件夹，true表示递归获取。</param>
        </member>
        <member name="M:MechTE_480.MECH.MechFile.GetDesktop(System.Object)">
            <summary>
            读取桌面内容
            </summary>
        </member>
    </members>
</doc>
