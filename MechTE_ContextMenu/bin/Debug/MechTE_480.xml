<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MechTE_480</name>
    </assembly>
    <members>
        <member name="T:MechTE_480.Files.MechFile">
            <summary>
            文件操作类
            </summary>
        </member>
        <member name="M:MechTE_480.Files.MechFile.ShellExecute(System.IntPtr,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Text.StringBuilder,System.Int32)">
            <summary>
            使用DllImport指定调用的Windows API函数及其相关信息
            </summary>
            <param name="hwnd">指定父窗口句柄:ntPtr.Zero</param>
            <param name="lpszOp">指定要进行的操作:Open</param>
            <param name="lpszFile">指定要打开的文件名|路径</param>
            <param name="lpszParams">指定命令行参数: 0 | ""</param>
            <param name="lpszDir">用于指定默认目录:0 | ""</param>
            <param name="fsShowCmd">显示模式: 0:隐藏 1~11</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.OpenFile(System.String,System.Int32)">
            <summary>
            开启程序/文件夹
            </summary>
            <param name="path">路径</param>
            <param name="fsShow">是否显示窗口 默认显示(1)</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.OpenFile(System.String)">
            <summary>
            使用系统进程打开程序/文件夹
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.CopyFile(System.String,System.String)">
            <summary>
            复制文件夹及文件
            </summary>
            <param name="sourceFolder">原文件路径</param>
            <param name="destFolder">目标文件路径</param>
            <returns>1 || -1</returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FileDialog">
            <summary>
            窗体浏览文件对话框
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.QueryFile(System.String)">
            <summary>
            获取指定目录文件夹
            </summary>
            <param name="path">文件路径</param>
            <returns>文件名,文件路径</returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.DelFile(System.String)">
            <summary>
            删除指定的文件
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="filePath">路径,包括文件名</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.CreateFile(System.String)">
            <summary>
            创建一个文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:MechTE_480.Files.MechFile.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="path">文件路径</param>
            <param name="strings">文件内容</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FileCopy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="orignFile">原始文件</param>
            <param name="newFile">新文件路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="path">路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="orignFile">原始路径</param>
            <param name="newFile">新路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="orignFolder">当前目录</param>
            <param name="newFloder">新目录</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FolderCreate(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.FileCreate(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="path">详细路径</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFileAttribute(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFiles(System.IO.DirectoryInfo,System.String,System.Collections.Generic.List{System.String}@)">
            <summary>
            获取指定目录下所有符合指定模式的文件名。
            </summary>
            <param name="directory">指定目录。</param>
            <param name="pattern">指定模式。</param>
            <param name="fileList">符合指定模式的文件名列表。</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetFiles(System.IO.DirectoryInfo,System.String,System.Collections.Generic.List{System.String}@,System.Boolean)">
            <summary>
            获取指定目录下符合指定模式的文件名和文件夹名。
            </summary>
            <param name="directory">指定目录。</param>
            <param name="pattern">指定模式。</param>
            <param name="fileList">符合指定模式的文件和文件夹名称列表。</param>
            <param name="recursive">是否递归获取子文件夹中的文件和文件夹，true表示递归获取。</param>
        </member>
        <member name="M:MechTE_480.Files.MechFile.GetDesktop(System.Object)">
            <summary>
            读取桌面内容
            </summary>
        </member>
        <member name="T:MechTE_480.Files.MFileTransfer">
            <summary>
            文件传输(上传,下载)
            </summary>
        </member>
        <member name="M:MechTE_480.Files.MFileTransfer.HttpPost(System.String,System.String,System.String,System.String)">
            <summary>
            通过HTTP下载
            </summary>
            <param name="httpUrl">HTTP请求路径</param>
            <param name="writeData">JSON格式属性</param>
            <param name="method">请求</param>
            <param name="path">下载到指定路径</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Files.MFileTransfer.ExtractZipFile(System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="zipFilePath">要解压的zip</param>
            <param name="extractPath">解压到指定路径</param>
        </member>
        <member name="M:MechTE_480.Files.MFileTransfer.DownloadZip(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            zip压缩包下载
            下载完成后自动执行解压动作,需传入解压路径unPath
            解压完成自动根据downloadName字段删除zip包
            </summary>
            <param name="httpPath">HTTP POST请求路径</param>
            <param name="mode">模式:EngineeringMode(工程),TestItem(量产) </param>
            <param name="zipPath">下载文件到指定路径,不允许为空</param>
            <param name="unPath">解压到指定路径,如空则解压到当前程序集的执行路径(根目录)</param>
            <param name="downloadName">文件名称(必须跟后台上传文件名匹配)</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Files.MFileTransfer.DownloadZip(System.String,System.String,System.String,System.String)">
            <summary>
            zip压缩包下载
            </summary>
            <param name="httpPath">HTTP POST请求路径</param>
            <param name="mode">模式:EngineeringMode(工程),TestItem(量产) </param>
            <param name="zipPath">下载文件到指定路径,不允许为空</param>
            <param name="downloadName">文件名称(必须跟后台上传文件名匹配)</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Files.MFileTransfer.UploadZip(System.String,System.String)">
            <summary>
            zip文件上传1
            </summary>
            <param name="httpPath">HTTP POST请求路径</param>
            <param name="zipPath">指定zip文件上传的路径</param>
            <returns>bool</returns>
        </member>
        <member name="T:MechTE_480.ButForm.MechButton">
            <summary>
            按键测试类
            </summary>
        </member>
        <member name="M:MechTE_480.ButForm.MechButton.ButtonTest(MechTE_480.Hid.MechHID,System.Action,System.String,System.String)">
            <summary>
            下指令按键测试
            </summary>
            <param name="command">command对象</param>
            <param name="action">下指令并且获取回传值的整个动作（下指令并且获取回传值事件）例：()=>{ command.WriteSendReturn() } </param>
            <param name="readdata">按键操作对应指令返回值</param>
            <param name="name">按键操作对应窗口名</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.ButForm.MechButton.ButtonTest(System.Func{System.Boolean},System.String)">
            <summary>
            下指令按键测试
            </summary>
            <param name="func">下指令并且获取回传值的整个动作（下指令并且获取回传值事件）例：()=>{ command.WriteSendReturn(); return command.ReturnValue == readdata } </param>
            <param name="name">按键操作对应窗口名</param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.Form.MechForm">
            <summary>
            窗体api
            </summary>
        </member>
        <member name="F:MechTE_480.Form.MechForm.X">
            <summary>
            定义当前窗体的宽度
            </summary>
        </member>
        <member name="F:MechTE_480.Form.MechForm.Y">
            <summary>
            定义当前窗体的高度
            </summary>
        </member>
        <member name="M:MechTE_480.Form.MechForm.SetTag(System.Windows.Forms.Control)">
            <summary>
            控件大小随窗体大小等比例缩放,
            在窗体重载中使用 >>  MechForm.X = this.Width; MechForm.Y = this.Height;  MechForm.SetTag(this);
            </summary>
            <param name="cons"></param>
        </member>
        <member name="M:MechTE_480.Form.MechForm.SetControls(System.Single,System.Single,System.Windows.Forms.Control)">
            <summary>
            设置缩放,在Resize事件中使用 >>
            float newX = this.Width / MechForm.X;
            float newY = this.Height / MechForm.Y;
            MechForm.SetControls(newX,newY,this);
            </summary>
            <param name="newx">X轴</param>
            <param name="newy">Y轴</param>
            <param name="cons"></param>
        </member>
        <member name="M:MechTE_480.Form.MechForm.MesBox(System.String,System.String)">
            <summary>
            默认弹框提示(确认/取消)
            </summary>
            <param name="name">描述</param>
            <param name="title">标题</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Form.MechForm.ShowErr(System.String,System.String)">
            <summary>
            错误提示(确认)
            </summary>
            <param name="title">标题</param>
            <param name="prompt">描述</param>
        </member>
        <member name="M:MechTE_480.Form.MechForm.ShowInputDialog(System.String,System.String)">
            <summary>
            弹窗接收参数(确认/取消)
            </summary>
            <param name="title">标题</param>
            <param name="prompt">描述</param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.Form.ProgressBars">
            <summary>
            进度条
            </summary>
        </member>
        <member name="F:MechTE_480.Form.ProgressBars.Ide">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.#ctor(System.String,System.Int32)">
            <summary>
            进度条初始化
            </summary>
            <param name="name">名称</param>
            <param name="time">时间毫秒</param>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.ProgressBars_Load(System.Object,System.EventArgs)">
            <summary>
            程序加载
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.ExecuteTest(System.Action)">
            <summary>
            执行窗体操作
            </summary>
            <param name="action">方法</param>
        </member>
        <member name="F:MechTE_480.Form.ProgressBars.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MechTE_480.Form.ProgressBars.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:MechTE_480.Form.ProgressBars.progressBarForm">
            
            progressBarForm
            
        </member>
        <member name="M:MechTE_480.Form.UpFile.UpFile_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            处理拖入的数据及操作
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:MechTE_480.Form.UpFile.UpFile_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            退出窗体
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:MechTE_480.Form.UpFile.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MechTE_480.Form.UpFile.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MechTE_480.Form.UpFile.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:MechTE_480.Hid.BaseConversion">
            <summary>
            进制转换帮助类
            </summary>
        </member>
        <member name="M:MechTE_480.Hid.BaseConversion.GetintArray(System.String)">
            <summary>
            将字符串转int数组
            </summary>
            <param name="ar"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.BaseConversion.GetByteArray(System.String,System.Int32)">
            <summary>
            將16進制字符串轉換為16进制byte數組并且根据数组长度自动补0
            </summary>
            <param name="shex">要转换的16进制字符串</param>
            <param name="lenght">要转换的Byte数组长度</param>
            <returns>转换后的Byte数组，自动补0</returns>
        </member>
        <member name="M:MechTE_480.Hid.BaseConversion.GetString(System.Byte[])">
            <summary>
            Byte数组转16进制字符串
            </summary>
            <param name="bytes">Byte数组</param>
            <returns>16进制字符串</returns>
        </member>
        <member name="M:MechTE_480.Hid.BaseConversion.GetString(System.Byte[],System.String)">
            <summary>
            Byte数组取指定索引值转16进制字符串 
            </summary>
            <param name="bytes">Byte数组</param>
            <param name="index">Byte数组索引数组</param>
            <returns>16进制字符串</returns>
        </member>
        <member name="T:MechTE_480.Hid.MechHID">
            <summary>
            获取句柄类
            </summary>
            <summary>
            指令帮助类
            </summary>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.intLen">
            <summary>
            定义数组长度,句柄对象,循环次数
            如有增加长度,同步新增col01
            </summary>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.SetHandle1">
            <summary>
            存储的句柄对象数组通道1
            </summary>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.SetHandle2">
            <summary>
             存储的句柄对象数组通道2
            </summary>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.SetPath1">
            <summary>
             存储的句柄地址通道1
            </summary>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.SetPath2">
            <summary>
             存储的句柄地址通道2
            </summary>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.CloseHandle(System.IntPtr)">
            <summary>
            关闭访问设备句柄，结束进程的时候把这个加上保险点
            </summary>
            <param name="hFile"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.HidD_GetHidGuid(System.Guid@)">
            <summary>
            获得GUID
            </summary>
            <param name="hidGuid"></param>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.Handle">
            <summary>
            句柄
            </summary>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetHidDevicePath(System.String,System.String,System.String,System.String)">
            <summary>
            获取双通道装置路径
            </summary>
            <param name="pid01"></param>
            <param name="vid01"></param>
            <param name="pid02"></param>
            <param name="vid02"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetHidDevicePath(System.String,System.String)">
            <summary>
            获取单通道装置路径
            </summary>
            <param name="pid01"></param>
            <param name="vid01"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetHidDevicePath(System.String,System.String,System.String)">
             <summary>
            获取单通道装置路径
             </summary>
             <param name="pid"></param>
             <param name="vid"></param>
             <param name="col"></param>
             <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetHandle(System.String,System.String,System.String,System.String)">
            <summary>
            获取双通道装置路径,传入参数不能为空
            </summary>
            <param name="pid01"></param>
            <param name="vid01"></param>
            <param name="pid02"></param>
            <param name="vid02"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetHandle(System.String,System.String)">
            <summary>
            获取单通道装置路径
            </summary>
            <param name="pid01"></param>
            <param name="vid01"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetHandle(System.String,System.String,System.String)">
            <summary>
            获取单通道装置路径
            </summary>
            <param name="pid"></param>
            <param name="vid"></param>
            <param name="col">指定col通道 , 特殊情况匹配pid</param>
            <returns></returns>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.ReturnValue">
            <summary>
            存储回传值
            </summary>
        </member>
        <member name="F:MechTE_480.Hid.MechHID.ALLReturnValue">
            <summary>
            存储全部回传值
            </summary>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.WriteSend(System.String,System.Int32,System.IntPtr)">
            <summary>
            使用write下下指令
            </summary>
            <param name="command">指令06 00 05...</param>
            <param name="lenght">指令长度</param>
            <param name="intPtr">装置句柄(如果没有调用GetHandle获取)</param>
            <returns>指令是否下成功</returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetReportSend(System.String,System.Int32,System.IntPtr)">
            <summary>
            使用getreport下下指令對外方法 
            </summary>
            <param name="command">指令06 00 05...</param>
            <param name="lenght">指令长度</param>
            <param name="intPtr">句柄指针</param>
            <returns>指令是否下成功</returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.SetReportSend(System.String,System.Int32,System.IntPtr)">
            <summary>
            使用setReport下下指令對外方法 
            </summary>
            <param name="command">指令06 00 05...</param>
            <param name="lenght">指令长度</param>
            <param name="intPtr">句柄指针</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.SetFeatureSend(System.String,System.Int32,System.IntPtr)">
            <summary>
            使用SetFeature下下指令對外方法 
            </summary>
            <param name="command">指令06 00 05...</param>
            <param name="lenght">指令长度</param>
            <param name="intPtr">句柄指针</param>
            <returns>指令是否下成功</returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.WriteReturn(System.String,System.Int32,System.String,System.String,System.String,System.IntPtr)">
            <summary>
            使用write下下指令并且存储回传值到ReturnValue
            </summary>
            <param name="command">指令06 00 05...</param>
            <param name="lenght">指令长度</param>
            <param name="readData">指定匹配的值</param>
            <param name="Indexes">指令返回值索引0 1 2 3...</param>
            <param name="handle">句柄路径</param>
            <param name="intPtr">句柄指针</param>
            <returns>指令是否下成功</returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.SetReportReturn(System.String,System.Int32,System.String,System.String,System.String,System.IntPtr)">
            <summary>
            使用setReport下下指令并且存储回传值到ReturnValue
            </summary>
            <param name="command">指令06 00 05...</param>
            <param name="lenght">指令长度</param>
            <param name="readdata">指定匹配的值</param>
            <param name="Indexes">指令返回值索引</param>
            <param name="handle">句柄地址</param>
            <param name="intPtr">句柄指针</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetFeatureReturn(System.String,System.Int32,System.IntPtr,System.String)">
            <summary>
            使用GetFeature下下指令對外方法并且存储回传值到ReturnValue
            </summary>
            <param name="command">指令</param>
            <param name="lenght">指令長度</param>
            <param name="intPtr">通道</param>
            <param name="indexes">返回下標值</param>
            <returns>返回读取的值</returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetReportReturn(System.String,System.Int32,System.IntPtr,System.String)">
            <summary>
            使用getReport下指令并且存储回传值到 ReturnValue
            </summary>
            <param name="command">指令</param>
            <param name="lenght">指令長度</param>
            <param name="intPtr">通道</param>
            <param name="indexes">返回下標值</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.IsReturnValue(System.String,System.String,System.Int32)">
            <summary>
            直接获取指定句柄回传值
            </summary>
            <param name="handle">句柄地址</param>
            <param name="length">句柄流数组长度</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.GetUSB_Name(System.UInt16,System.UInt16,System.String)">
            <summary>
            根据VID和PID及设备匹配获取装置名称
            </summary>
            <param name="VendorID">供应商标识</param>
            <param name="ProductID">产品编号</param>
            <param name="Name">装置名称</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Hid.MechHID.IsUSBDevice(System.String)">
            <summary>
            判断USB指定装置是否存在
            </summary>
            <param name="deviceName">DeviceID : 如PID VID</param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechConvert">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="totalLength">字符串的固定长度</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.ImgToBase64(System.String)">
            <summary>
            图片转base64
            </summary>
            <param name="imagePath"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.HexadecimalToASCII(System.String)">
            <summary>
            将16进制字符转为ASCII字符
            </summary>
            <param name="hex">16个数字（0-9和A-F）来表示</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.ASCIIConvertsDecimal16(System.String)">
            <summary>
            ASCII字符转为16进制字符
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.HexStrings2AsciiHexStrings(System.String)">
            <summary>
            将16进制字符转为ASCII 16进制字符
            </summary>
            <param name="hexStrings">16进制字符</param>
            <returns>示例：01 &gt; 30 31</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechConvert.ByteArr2HexStrings(System.Byte[],System.String)">
            <summary>
            示例：[ "AB", "CD", "EF" ] -> "AB{separator}CD{separator}EF"
            </summary>
            <param name="bytes"></param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechIni">
            <summary>
            ini文件操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取ini
            </summary>
            <param name="section">ni文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="def">如果ini文件中没有前两个参数指定的字段名或键名,则将此值赋给变量</param>
            <param name="retVal">得到的值</param>
            <param name="size">大小</param>
            <param name="iniPath">完整的ini文件名路径</param>
            <returns></returns>
            声明INI文件的读操作函数 GetPrivateProfileString()
        </member>
        <member name="M:MechTE_480.MECH.MechIni.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="val">写入的值</param>
            <param name="filePath">完整的ini文件名路径</param>
            <returns></returns>
            声明INI文件的写操作函数 WritePrivateProfileString()
        </member>
        <member name="M:MechTE_480.MECH.MechIni.WriteIni(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">key名</param>
            <param name="value">写入的值</param>
            <param name="path">完整的ini文件名路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.ReadIni(System.String,System.String,System.String)">
            <summary>
            读取ini
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">键名</param>
            <param name="path">文件路径</param>
            <returns>string</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.ReadIniArray(System.String,System.String,System.String)">
            <summary>
            读取ini string[]
            </summary>
            <param name="section">ini文件 [xxxx] 头部标识</param>
            <param name="key">文件路径</param>
            <param name="path">Key</param>
            <returns>string[]</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechIni.DeleteIni(System.String)">
            <summary>
            删除一个INI文件
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="T:MechTE_480.MECH.MechString">
            <summary>
            字符串操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechString.Reverse(System.String)">
            <summary>
            将字符按2个长度为一组进行反序
            </summary>
            <param name="str">11223344</param>
            <returns>44332211->11223344</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechString.ClearStringSpaces(System.String)">
            <summary>
            清除字符串中的空格
            </summary>
            <param name="str"></param>
            <returns>00 00 00 00 > 00000000</returns>
        </member>
        <member name="T:MechTE_480.MECH.MechTemplate">
            <summary>
            模板操作
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechTemplate.IsBzpToUpper(System.String)">
            <summary>
            检查SN是否是标准品条码
            转换大写
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUSB.IsUSBDevice(System.String)">
            <summary>
            判断USB指定装置是否存在
            </summary>
            <param name="deviceName">装置名称(DeviceID)</param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.MECH.MechUtils">
            <summary>
            通用工具类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.IsUserAdministrator">
            <summary>
            判断当前程序是否是管理员
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.RestartAsAdministrator">
            <summary>
            重新启动应用程序并请求管理员权限
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.GetTheCurrentProgramAndDirectory">
             <summary>
             获取当前程序根目录,
            如: D:\sw\Console\FileDownLoad\DownLoad\bin\Debug
             </summary>
             <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.GenerateNumberStringSequence(System.Int32,System.Int32)">
            <summary>
            生成数字字符串序列
            </summary>
            <param name="startNumber">序列中第一个整数的值</param>
            <param name="sequenceLength">生成的顺序总条数</param>
            <returns>传入0,6 生成 0 1 2 3 4 5</returns>  
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.StringToByteArray(System.String)">
            <summary>
            将字符串转换为字节数组
            示例："ABCDEF" -> [ 0xAB, 0xCD, 0xEF ]
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.ByteArrayToHexStrings(System.Collections.Generic.List{System.Byte},System.String)">
            <summary>
            将字节数组转换为十六进制字符串
            示例：[ "AB", "CD", "EF" ] -> "AB{separator}CD{separator}EF"
            </summary>
            <param name="bytes"></param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.CharacterConversionHidFormat(System.String)">
            <summary>
            将字符转换HID指令格式 
            </summary>
            <param name="keyValue"></param>
            <returns>"keyValue=0021032334 > 00 21 03 23 34</returns>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.IsEmptyAssert(System.String,System.String)">
            <summary>
             判断字符串是否为空,空等于true，抛出异常
            </summary>
            <param name="str"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.Assert(System.Boolean,System.String)">
            <summary>
            自定义断言方法， result == true 抛出异常
            </summary>
            <param name="result">bool</param>
            <param name="errMsg">错误信息</param>
            <remarks>系统断言不能在 Release 版保留，用这个方法替代</remarks>
        </member>
        <member name="M:MechTE_480.MECH.MechUtils.Assert(System.Func{System.Boolean},System.String)">
            <summary>
            自定义断言方法， func() == true 抛出异常    
            </summary>
            <param name="func"></param>
            <param name="errMsg"></param>
            <remarks>系统断言不能在 Release 版保留，用这个方法替代</remarks>
        </member>
        <member name="T:MechTE_480.MECH.MechXML">
            <summary>
            XML动态操作类
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="strPath"></param>
        </member>
        <member name="F:MechTE_480.MECH.MechXML.PathXml">
            <summary>
            xml路径
            </summary>
        </member>
        <member name="F:MechTE_480.MECH.MechXML.funName">
            <summary>
            方法的节点名称
            </summary>
        </member>
        <member name="F:MechTE_480.MECH.MechXML.CurrenPath">
            <summary>
            根目录路径
            </summary>
        </member>
        <member name="P:MechTE_480.MECH.MechXML.XmlPath">
            <summary>
            xml路径
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.XmlLoad">
            <summary>
            导入XML文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.XmlLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="strPath">XML文件路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.ReadRequest(System.String,System.String,System.String)">
            <summary>
            读取Request中node节点的值
            </summary>
            <param name="funName"></param>
            <param name="node"></param>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertRequestFormat(System.String,System.String)">
            <summary>
            插入RequestFormat节点数据
            </summary>
            <param name="element">元素名</param>
            <param name="attribute">属性名,如果""则不插值</param>
            使用示列:
            ("packet_type","0x05");
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertRequestFormatResult(System.String)">
            <summary>
            插入RequestFormat数组节点,
            在需要传指令调用时使用,
            如:传bd:112233445566 根据传入的值进行赋值传入
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertResponseFormatResult(System.String)">
            <summary>
            插入RequestFormat数组节点
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InsertResponseFormat(System.String,System.String)">
            <summary>
            插入ResponseFormat节点数据 ,  响应匹配到的节点值
            </summary>
            <param name="element">元素名</param>
            <param name="attribute">属性名,如果""则不插值</param>
            使用示列:
            ("packet_type","0x05");
        </member>
        <member name="M:MechTE_480.MECH.MechXML.InitializeTheNode">
            <summary>
            初始化节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.CreateChildNode">
            <summary>
            设定方法属性,创建节点对应的方法
            RequestFormat,
            ResponseFormat
            </summary>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.UpdateRequest(System.String,System.String,System.String,System.String)">
            <summary>
            修改Request指定节点的属性值
            </summary>
            <param name="path"></param>
            <param name="node">节点,传入方法名</param>
            <param name="element">节点,传入属性名称</param>
            <param name="value">更新的值</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点,传入方法名</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:MechTE_480.MECH.MechXML.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="strXmlPath"></param>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:MechTE_480.MECH.MechXML.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="columnValue">指定值</param>
        </member>
        <member name="T:MechTE_480.MerryDll.IMerryDll">
            <summary>
            模板函数
            </summary>
        </member>
        <member name="M:MechTE_480.MerryDll.IMerryDll.StartRun">
            <summary>
            程序每次开始运行时触发
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MerryDll.IMerryDll.Start(System.Collections.Generic.List{System.String},System.IntPtr)">
            <summary>
            程序启动时第三个触发的接口，运作代码可以自定义，返回 false表示程序不允许启动
            </summary>
            <param name="formsData">数据集合（本dll被实例化为主程序中对象，所以主程序formsData与本参数，以及本参数赋值后的参数，指向同一堆对象）</param>
            <param name="_handel">主程序主窗体句柄</param>
            <returns>启动是否成功</returns>
        </member>
        <member name="M:MechTE_480.MerryDll.IMerryDll.Run(System.String)">
            <summary>
            调用内部方法
            </summary>
            <param name="message">指令，决定调用哪个方法</param>
            <returns>方法调用后回传值</returns>
        </member>
        <member name="M:MechTE_480.MerryDll.IMerryDll.Interface(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            模板中的全局变量,
            接收如BD号，SN，测试站别、机型、客户SN、测试计划、测试值、测试结果等等，详细参数可参照Config字典.xlsx 
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MerryDll.IMerryDll.GetDllInfo">
            <summary>
            版本信息接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.MerryDll.IMerryDll.TestsEnd(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:MechTE_480.Order.MechProcess">
            <summary>
            cmd包装类
            </summary>
            <summary>
            cmd命令
            </summary>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.ExeCommand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            执行多条cmd.exe命令
            </summary>
            <param name="commandTexts"></param>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.ExeBat(System.String)">
            <summary>
            执行Bat
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.ExeCommandAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            使用cmd执行Shell命名
            </summary>
            <param name="commandTexts"></param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.StartApp(System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            进程窗口模式
            </summary>
            <param name="appName">应用程序路径名称</param>
            <param name="style">显示模式</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.StartShell(System.String)">
             <summary>
            执行Shell命令
             </summary>
             <param name="cmd">Shell程序命令</param>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.StartBat(System.String)">
            <summary>
            执行bat文件
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.StartApp(System.String)">
            <summary>
             启动Windows应用/网站
            </summary>
            <param name="appName">/程序路径</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.StartApps(System.String)">
            <summary>
            管理员运行程序
            </summary>
            <param name="appName"></param>
        </member>
        <member name="M:MechTE_480.Order.MechProcess.StartApp(System.String,System.String,System.Diagnostics.ProcessWindowStyle)">
            <summary>
            启动外部应用程序
            </summary>
            <param name="appName"></param>
            <param name="arguments"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="T:MechTE_480.Windows.MechWin">
            <summary>
            系统相关API
            </summary>
            <summary>
            系统音频设置
            </summary>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.MessageBox(System.IntPtr,System.String,System.String,System.Int32)">
            <summary>
            Windows操作系统提供的一个函数，用于在应用程序中显示消息框。消息框可以用于显示警告、错误、提示等信息，并与用户进行交互。
            </summary>
            <param name="hWnd">窗口句柄设为0，表示使用默认窗口</param>
            <param name="text">提示描述</param>
            <param name="caption">标题</param>
            <param name="options">消息框的选项，例如按钮类型和图标类型</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.SetMasterVolume(System.Single)">
            <summary>
            设置系统音量
            </summary>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.GetMasterVolume">
            <summary>
            返回系统音量(1~100)
            </summary>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.SetMasterVolumeMute(System.Boolean)">
            <summary>
            设置系统静音
            </summary>
            <param name="isMuted"></param>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.MesBoxs(System.String,System.String)">
            <summary>
            弹出提示
            </summary>
            <param name="text">内容描述</param>
            <param name="caption">标题</param>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.MesBoxs(System.String,System.String,System.Int32)">
            <summary>
            弹出提示,传参
            </summary>
            <param name="text">内容描述</param>
            <param name="caption">标题</param>
            <param name="options">1:确认/取消,2:终止/重试/忽略,3:是/否/取消,4:是/否,5:重试/取消,6:取消/重试/继续</param>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.OpenA2DP">
            <summary>
            启动播放装置
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.EnterHfp">
            <summary>
            开启音频设置显示到桌面
            </summary>
            <returns></returns>
        </member>
        <member name="M:MechTE_480.Windows.MechWin.CloseRunDll(System.String)">
            <summary>
            检测进程关掉
            </summary>
            <param name="processName">rundll32</param>
            <returns>bool</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetChannelCount(System.UInt32@)">
            <summary>
            Gets a count of the channels in the audio stream.
            </summary>
            <param name="channelCount">The number of channels.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.SetMasterVolumeLevel(System.Single,System.Guid)">
            <summary>
            Sets the master volume level of the audio stream, in decibels.
            </summary>
            <param name="level">The new master volume level in decibels.</param>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.SetMasterVolumeLevelScalar(System.Single,System.Guid)">
            <summary>
            Sets the master volume level, expressed as a normalized, audio-tapered value.
            </summary>
            <param name="level">The new master volume level expressed as a normalized value between 0.0 and 1.0.</param>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetMasterVolumeLevel(System.Single@)">
            <summary>
            Gets the master volume level of the audio stream, in decibels.
            </summary>
            <param name="level">The volume level in decibels.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetMasterVolumeLevelScalar(System.Single@)">
            <summary>
            Gets the master volume level, expressed as a normalized, audio-tapered value.
            </summary>
            <param name="level">The volume level expressed as a normalized value between 0.0 and 1.0.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.SetChannelVolumeLevel(System.UInt32,System.Single,System.Guid)">
            <summary>
            Sets the volume level, in decibels, of the specified channel of the audio stream.
            </summary>
            <param name="channelNumber">The channel number.</param>
            <param name="level">The new volume level in decibels.</param>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.SetChannelVolumeLevelScalar(System.UInt32,System.Single,System.Guid)">
            <summary>
            Sets the normalized, audio-tapered volume level of the specified channel in the audio stream.
            </summary>
            <param name="channelNumber">The channel number.</param>
            <param name="level">The new master volume level expressed as a normalized value between 0.0 and 1.0.</param>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetChannelVolumeLevel(System.UInt32,System.Single@)">
            <summary>
            Gets the volume level, in decibels, of the specified channel in the audio stream.
            </summary>
            <param name="channelNumber">The zero-based channel number.</param>
            <param name="level">The volume level in decibels.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetChannelVolumeLevelScalar(System.UInt32,System.Single@)">
            <summary>
            Gets the normalized, audio-tapered volume level of the specified channel of the audio stream.
            </summary>
            <param name="channelNumber">The zero-based channel number.</param>
            <param name="level">The volume level expressed as a normalized value between 0.0 and 1.0.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.SetMute(System.Boolean,System.Guid)">
            <summary>
            Sets the muting state of the audio stream.
            </summary>
            <param name="isMuted">True to mute the stream, or false to unmute the stream.</param>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetMute(System.Boolean@)">
            <summary>
            Gets the muting state of the audio stream.
            </summary>
            <param name="isMuted">The muting state. True if the stream is muted, false otherwise.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetVolumeStepInfo(System.UInt32@,System.UInt32@)">
            <summary>
            Gets information about the current step in the volume range.
            </summary>
            <param name="step">The current zero-based step index.</param>
            <param name="stepCount">The total number of steps in the volume range.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.VolumeStepUp(System.Guid)">
            <summary>
            Increases the volume level by one step.
            </summary>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.VolumeStepDown(System.Guid)">
            <summary>
            Decreases the volume level by one step.
            </summary>
            <param name="eventContext">A user context value that is passed to the notification callback.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.QueryHardwareSupport(System.UInt32@)">
            <summary>
            Queries the audio endpoint device for its hardware-supported functions.
            </summary>
            <param name="hardwareSupportMask">A hardware support mask that indicates the capabilities of the endpoint.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="M:MechTE_480.Windows.IAudioEndpointVolume.GetVolumeRange(System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets the volume range of the audio stream, in decibels.
            </summary>
            <param name="volumeMin">The minimum volume level in decibels.</param>
            <param name="volumeMax">The maximum volume level in decibels.</param>
            <param name="volumeStep">The volume increment level in decibels.</param>
            <returns>An HRESULT code indicating whether the operation passed of failed.</returns>
        </member>
        <member name="T:MerryUtil.Computer.MouseControl">
            <summary>
            控制鼠标类
            </summary>
        </member>
        <member name="M:MerryUtil.Computer.MouseControl.MouseMove(System.Drawing.Point,System.Int32,System.Int32)">
            <summary>
            鼠标移动
            </summary>
            <param name="location">窗体坐标（this.Location）</param>
            <param name="offsetvalueX">X坐标偏移值</param>
            <param name="offsetvalueY">Y坐标偏移值（this.Location）</param>
        </member>
        <member name="M:MerryUtil.Computer.MouseControl.MouseLeftClick">
            <summary>
            鼠标左键点击
            </summary>
        </member>
        <member name="M:MerryUtil.Computer.MouseControl.MouseRightClick">
            <summary>
            鼠标右键点击
            </summary>
        </member>
        <member name="M:MerryUtil.Computer.MouseControl.MouseMiddleClick">
            <summary>
            鼠标中键点击
            </summary>
        </member>
        <member name="F:MerryUtil.Forms.ProgressBars.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:MerryUtil.Forms.ProgressBars.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:MerryUtil.Forms.ProgressBars.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
